import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º –¥–∞–Ω–Ω—ã—Ö
const EMPLOYEE_FILE = '/Users/mokoloskov/Desktop/employee_[92]_08.08.2025.json';
const COMPANY_FILE = '/Users/mokoloskov/Desktop/company_[56]_08.08.2025.json';
const OUTPUT_FILE = path.join(__dirname, '..', 'public', 'contacts.json');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏
function getFunction(position) {
  const pos = position.toLowerCase();
  if (pos.includes('design') || pos.includes('–¥–∏–∑–∞–π–Ω')) return 'Design';
  if (pos.includes('developer') || pos.includes('—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫') || pos.includes('–ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç')) return 'Development';
  if (pos.includes('product') || pos.includes('–ø—Ä–æ–¥—É–∫—Ç')) return 'Product';
  if (pos.includes('marketing') || pos.includes('–º–∞—Ä–∫–µ—Ç–∏–Ω–≥')) return 'Marketing';
  if (pos.includes('manager') || pos.includes('–º–µ–Ω–µ–¥–∂–µ—Ä')) return 'Product';
  return 'Development'; // –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ URL —Ñ–æ—Ç–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
function getPhotoUrl(photoFile) {
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Å URL encoding –¥–ª—è –∫–∏—Ä–∏–ª–ª–∏—Ü—ã
  return `/photos/${encodeURIComponent(photoFile)}`;
}

// –ü—Ä–æ—Å—Ç–∞—è hash —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ—Å—Ç–æ—è–Ω–Ω—ã—Ö ID
function hashCode(str) {
  let hash = 0;
  for (let i = 0; i < str.length; i++) {
    const char = str.charCodeAt(i);
    hash = ((hash << 5) - hash) + char;
    hash = hash & hash; // –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ 32-–±–∏—Ç–Ω–æ–µ —Ü–µ–ª–æ–µ
  }
  return hash;
}

// –ú–∞–ø–ø–∏–Ω–≥ –∏–Ω–¥—É—Å—Ç—Ä–∏–π
function mapIndustry(industry) {
  const industryMap = {
    '–§–∏–Ω–∞–Ω—Å—ã': '–ë–∞–Ω–∫–∏',
    '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏': '–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å—ã',
    '–õ–æ–≥–∏—Å—Ç–∏–∫–∞': '–õ–æ–≥–∏—Å—Ç–∏–∫–∞',
    '–ú–µ–¥–∏–∞': '–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏'
  };
  return industryMap[industry] || '–ë–∞–Ω–∫–∏';
}

async function mergeData() {
  try {
    console.log('–ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ...');
    
    // –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª—ã
    const employeesRaw = fs.readFileSync(EMPLOYEE_FILE, 'utf8');
    const companiesRaw = fs.readFileSync(COMPANY_FILE, 'utf8');
    
    const employees = JSON.parse(employeesRaw);
    const companies = JSON.parse(companiesRaw);
    
    console.log(`–ù–∞–π–¥–µ–Ω–æ ${employees.length} —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∏ ${companies.length} –∫–æ–º–ø–∞–Ω–∏–π`);
    
    // –°–æ–∑–¥–∞–µ–º –∫–∞—Ä—Ç—É –∫–æ–º–ø–∞–Ω–∏–π –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞
    const companyMap = new Map();
    companies.forEach(company => {
      companyMap.set(company.company_id, company);
    });
    
    // –û–±—ä–µ–¥–∏–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
    const contacts = employees.map((employee, index) => {
      const company = companyMap.get(employee.company_id);
      
      return {
        id: index + 1,
        employee_photo_url: getPhotoUrl(employee.employee_photo_file),
        employee_first_name_ru: employee.employee_first_name_ru,
        employee_last_name_ru: employee.employee_last_name_ru,
        employee_position_title: employee.employee_position_title,
        company_name_ru: employee.company_name_ru,
        industry: company ? mapIndustry(company.company_industry) : '–ë–∞–Ω–∫–∏',
        function: getFunction(employee.employee_position_title),
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –¥–ª—è –±—É–¥—É—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
        company_url: company ? company.company_url : '',
        company_country: company ? company.company_country : '',
        facebook_link: employee.employee_facebook_link || ''
      };
    });
    
    // –°–æ–∑–¥–∞–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
    const result = {
      contacts: contacts
    };
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    fs.writeFileSync(OUTPUT_FILE, JSON.stringify(result, null, 2), 'utf8');
    
    console.log(`‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ–±—ä–µ–¥–∏–Ω–µ–Ω—ã –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ ${OUTPUT_FILE}`);
    console.log(`üìä –°–æ–∑–¥–∞–Ω–æ ${contacts.length} –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤`);
    
    // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∏–Ω–¥—É—Å—Ç—Ä–∏—è–º
    const industryStats = {};
    contacts.forEach(contact => {
      industryStats[contact.industry] = (industryStats[contact.industry] || 0) + 1;
    });
    
    console.log('\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∏–Ω–¥—É—Å—Ç—Ä–∏—è–º:');
    Object.entries(industryStats).forEach(([industry, count]) => {
      console.log(`  ${industry}: ${count}`);
    });
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
mergeData();